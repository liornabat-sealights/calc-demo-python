version: '3'

tasks:
  activate:
    dir: venv/Scripts
    cmds:
      - activate.bat
  install:
    cmds:
      - pip install D:/Development/projects/sealights/SL.OnPremise.Agents.Python
  install-wsl:
    cmds:
      - pip install /mnt/d/Development/projects/sealights/SL.OnPremise.Agents.Python
  pip:
    cmds:
      - pip install -r requirements_sealights.txt
  bsid:
    env:
      SL_PROXY: "http://127.0.0.1:9000"
#      SL_DEBUG: true
    cmds:
      - sl-python config --appname calc-demo-python --tokenfile ./sltoken.txt --exclude "*tests*,*venv*"
  prbsid:
    env:
#      SL_DEBUG: true
    cmds:
      - sl-python prconfig --appname calc-demo-python --tokenfile ./sltoken.txt --exclude "*tests*,*venv*" --targetbranch main --latestcommit asd3asd --pullrequestnumber 123 --repourl dasdasdasdas
  scan:
    env:
      SL_PROXY: "http://127.0.0.1:9000"
#      SL_DEBUG: true
      SL_DEBUG_CALLS: true
    cmds:
      - sl-python scan --buildsessionidfile ./buildSessionId.txt --tokenfile ./sltoken.txt --withlineconverage True
  unittest:
    env:
      SL_PROXY: "http://127.0.0.1:9000"
#      SL_DEBUG: true
    cmds:
      - sl-python unittest --buildsessionidfile ./buildSessionId.txt --tokenfile ./sltoken.txt --teststage unittest
  pytest:
    env:
      SL_PROXY: "http://127.0.0.1:9000"
#      SL_DEBUG: true
#      SL_LEGACY_MODE: true
    cmds:
      - sl-python pytest  --teststage pytest

  behave:
    env:
      SL_PROXY: "http://127.0.0.1:9000"
    #      SL_DEBUG: true
    #  SL_LEGACY_MODE: true
    cmds:
      - sl-python behave --buildsessionidfile ./buildSessionId.txt --tokenfile ./sltoken.txt --teststage  behave --cov-report report.xml tests/behave/features --show-timings -v
  nose:
    env:
      SL_PROXY: "http://127.0.0.1:9000"
#      SL_DEBUG: true
    cmds:
      - sl-python nose --buildsessionidfile ./buildSessionId.txt --tokenfile ./sltoken.txt --teststage nose  ./tests/nose/test_main.py
  start:
    env:
      SL_DEBUG: true
      SL_LAB_ID: some-lab-id
      SL_PROXY: "http://localhost:9000"
#      SL_LEGACY_MODE: true
    cmds:
      - sl-python start --teststage run_stage
  end:
    env:
      SL_DEBUG: true
      SL_LAB_ID: some-lab-id
      SL_PROXY: "http://127.0.0.1:9000"
#      SL_LEGACY_MODE: true
    cmds:
      - sl-python end --teststage run_stage
  upload_reports:
    env:
      SL_LAB_ID: some-lab-id
#      SL_DEBUG_CALLS: true
    cmds:
      - sl-python uploadreports --reportfilesfolder "./reports" --type JUnitReport --buildsessionidfile ./buildSessionId.txt --tokenfile ./sltoken.txt --teststage reports
  run:
    env:
      SL_DEBUG: true
#      SL_LAB_ID: some-lab-id
      SL_PROXY: "http://127.0.0.1:9000"
#      SL_LEGACY_MODE: true
    cmds:
      - cmd: tskill python
        ignore_error: true
      - sl-python run  --teststage run_stage --cov-report report-run-stage.xml --labid=asdasda --autoexecution python ./main.py

  run-full:
    env:
      SL_DEBUG: true
      SL_LAB_ID: some-lab-id
      SL_PROXY: "http://127.0.0.1:9000"
#      SL_LEGACY_MODE: true
    cmds:
      - cmd: tskill python
        ignore_error: true
      - sl-python config --appname calc-demo-python --tokenfile ./sltoken.txt --exclude "*tests*,*venv*"
      - sl-python scan
      - sl-python pytest --teststage pytest --cov-report report-pytest.xml
      - sl-python unittest --teststage unittest --cov-report report-unittest.xml
      - sl-python behave --teststage --cov-report report-behave.txt  behave tests/behave/features --show-timings -v
      - sl-python run --teststage run_stage --cov-report report-run_stage.xml --autoexecution python ./main.py
  run-batch:
    env:
#      SL_DEBUG: true
      SL_LAB_ID: some-lab-id
      SL_PROXY: "http://127.0.0.1:9000"
#      SL_LEGACY_MODE: true
    cmds:
      - python runner.py

  run-module:
    env:
      SL_DEBUG: true
    cmds:
      - sl-python run --buildsessionidfile ./buildSessionId.txt --tokenfile ./sltoken.txt python -m local_dev.flask_run
  pcf:
    cmds:
      - cf target -o "system" -s "sealights"
      - cf push calc-demo -b https://github.com/cloudfoundry/python-buildpack.git
  pcf-local:
    cmds:
      - cf target -o "system" -s "sealights"
#      - cf push calc-demo -b file://D:/Development/projects/sealights/python-buildpack
      - cf push calc-demo -b https://github.com/liornabat-sealights/python-buildpack.git
  pcf-service:
    cmds:
      - cf cups sealights -p pcf_service.json
  pcf-ci:
    cmds:
      - task: install
      - task: bsid
      - task: scan
      - task: pcf-local
      - cf bs calc-demo sealights
      - cf restage calc-demo
  ci:
    cmds:
      - task: install
      - task: bsid
      - task: scan

# Important - python pcf buildpack need more setting after creating the env:
# Enable TCP routing in Networking
# Apply again the setting
# run cf create-shared-domain tcp.[ENV-NAME].cf-app.com --router-group default-tcp
